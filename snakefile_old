# define directory 
configfile: "config.yaml"
home_dir = config["home_dir"]
input_dir = config["input_dir"]
output_dir = config["output_dir"]
log_dir = config["log_dir"]

rule all: 
    input:
        f"{output_dir}/output_file/example-br.out",
        f"{output_dir}/integrated_cross_sections/energy_integration.txt",
        f"{output_dir}/integrated_cross_sections/angle_integration.txt"

# rule to run the fresco input file,
# then save all of the outputs to the specified output directory 

rule run_input: 
    input: f"{input_dir}/example-br.in"
    output: f"{output_dir}/output_file/example-br.out"
    log: f{log_dir}/run_calculation
   # Set memory resource for job submission
    resources: 
        mem_mb = 4000 
    threads: 4
    shell:
        f"""
        {home_dir}/fresco/cdc < {input} > long_input.in
        {home_dir}/fresco/fresco < long_input.in > {output} 
# {home_dir}/fresco/sumbins < fort.16 > energy_integration.txt
# {home_dir}/fresco/sumxen < fort.13  > angle_integration.txt
# for file in fort.*; do
#    mv "$file" {home_dir}/outputs/fort_files/;
# done    
# mv example-br.out {home_dir}/outputs/output_file
# mv cdc.in {home_dir}/input/
# mv long_input.in {home_dir}/input/
# mv energy_integration.txt {home_dir}/outputs/integrated_cross_sections/
# mv angle_integration.txt {home_dir}/outputs/integrated_cross_sections/
        """

# Rule to plot the total breakup cross section
#rule plot_brkup_cs: 
 #   input: config["input_dir"]/energy_integration.txt
  #  output: config["output_dir"]/plots/brkup_cs.png
   # run: 
    #    import matplotlib.pyplot as plt
     #   import os 
      #  print("Starting to run python")
        # start of script to read in file
       # content = []
       # theta= []
       # CS = []
          
       # if os.path.isfile(input[0]):
        #    print(f'File  exists')
         #   with open(input[0]) as file:
          #      for line in file:
           #         count = 0
            #        strip = line.strip().split()
             #       print("File read")
              #      if len(strip) > 1:
               #         try: 
                #           theta.append(float(strip[0]))
                 #          CS.append(float(strip[1]))
                  #      except ValueError:
                   #        continue
       # else: 
        #    print(f'File  does not exist')
#
        # Plot the result
 #       plt.plot(theta, CS)
  #      plt.xlabel('COM Angle')
   #     plt.ylabel('Total Breakup Cross-Section (mb/str)')
    #    plt.title('Breakup Angular Distribution')
     #   plt.savefig("brkup_cs.png")
#
# Move breakup cross section to output directory
#rule move_plot:
 #   input: "brkup_cs.png"
  #  output: "~/outputs/plots/brkup_cs.png"
   # shell: f"mv {input} {output}"
#
